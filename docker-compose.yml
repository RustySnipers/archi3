version: '3.8'

services:
  # LocalAI - LLM Backend
  localai:
    image: quay.io/go-skynet/local-ai:latest
    container_name: archie_localai
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - THREADS=4
      - CONTEXT_SIZE=4096
      - MODELS_PATH=/models
      - GALLERIES=[]
      - DEBUG=false
    volumes:
      - ./data/models:/models
      - ./data/cache/localai:/tmp/localai
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Home Assistant - Smart Home Hub
  homeassistant:
    image: homeassistant/home-assistant:stable
    container_name: archie_homeassistant
    restart: unless-stopped
    privileged: true
    network_mode: host
    environment:
      - TZ=America/New_York
    volumes:
      - ./data/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - mosquitto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: archie_n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=changeme
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/New_York
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
    volumes:
      - ./data/n8n:/home/node/.n8n
    networks:
      - archie_network
    depends_on:
      - mosquitto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mosquitto - MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: archie_mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./data/mosquitto/data:/mosquitto/data
      - ./data/mosquitto/log:/mosquitto/log
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ChromaDB - Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: archie_chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - ./data/chroma:/chroma/chroma
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Archie Core - Main AI Assistant
  archie_core:
    build:
      context: .
      dockerfile: docker/Dockerfile.archie
    container_name: archie_core
    restart: unless-stopped
    depends_on:
      - localai
      - chromadb
      - mosquitto
    environment:
      - ARCHIE_CONFIG_PATH=/opt/archie/configs
      - ARCHIE_DATA_PATH=/opt/archie/data
      - ARCHIE_LOG_LEVEL=INFO
      - ARCHIE_ENABLE_VOICE=true
      - ARCHIE_ENABLE_AUTOMATION=true
    volumes:
      - ./configs:/opt/archie/configs:ro
      - ./data:/opt/archie/data
      - ./archie_core:/opt/archie/archie_core
      - ./voice:/opt/archie/voice
      - ./integrations:/opt/archie/integrations
      - ./mcp_servers:/opt/archie/mcp_servers
      - /dev/snd:/dev/snd
    devices:
      - /dev/snd:/dev/snd
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "python", "/opt/archie/scripts/health_check.py"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Caching and Session Storage
  redis:
    image: redis:7-alpine
    container_name: archie_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx - Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: archie_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/logs:/var/log/nginx
      - ./data/nginx/ssl:/etc/ssl/certs
    depends_on:
      - archie_core
      - n8n
      - homeassistant
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus - Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: archie_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Monitoring Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: archie_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./configs/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - archie_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  archie_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  models:
    driver: local
  chroma_data:
    driver: local
  homeassistant_data:
    driver: local
  n8n_data:
    driver: local
  mosquitto_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local